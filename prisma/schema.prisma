// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TransactionType {
  INCOME
  EXPENSE
}

enum CategoryType {
  WANTS
  NEEDS
  SAVINGS
}

model User {
  id           String        @id
  name         String?
  transactions Transaction[]
  months       Month[]
}

model Month {
  id              String           @id @default(uuid())
  userId          String
  month           Int
  year            Int
  createdAt       DateTime         @default(now())
  transactions    Transaction[]
  monthlyBudget   MonthlyBudget[]
  categoryBudgets CategoryBudget[]

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, month, year])
}

model Transaction {
  id        String          @id @default(uuid())
  userId    String
  monthId   String
  title     String
  amount    Decimal         @db.Decimal(10, 2)
  type      TransactionType
  category  CategoryType
  date      DateTime
  createdAt DateTime        @default(now())

  user  User  @relation(fields: [userId], references: [id])
  month Month @relation(fields: [monthId], references: [id])

  @@index([userId, monthId])
  @@index([type])
  @@index([category])
}

model MonthlyBudget {
  id          String  @id @default(uuid())
  monthId     String  @unique
  totalBudget Decimal @db.Decimal(10, 2)

  month Month @relation(fields: [monthId], references: [id])
}

model CategoryBudget {
  id       String       @id @default(uuid())
  monthId  String
  category CategoryType
  amount   Decimal      @db.Decimal(10, 2)

  Month Month? @relation(fields: [monthId], references: [id])

  @@unique([monthId, category])
}
